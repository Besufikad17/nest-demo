generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String              @id @default(uuid())
  firstName      String              @map("first_name")
  lastName       String              @map("last_name")
  email          String?             @unique
  phoneNumber    String?             @unique @map("phone_number")
  passwordHash   String              @map("password_hash")
  createdAt      DateTime            @default(now()) @map("created_at")
  updatedAt      DateTime            @updatedAt @map("updated_at")
  lastLogin      DateTime?           @map("last_login")
  isActive       Boolean             @default(false) @map("is_active")
  accountStatus  USER_ACCOUNT_STATUS @default(INACTIVE) @map("account_status")
  twoStepEnabled Boolean             @default(false) @map("two_step_enabled")
  OTP            OTP[]
}

model OTP {
  id         String         @id @default(uuid())
  userId     String?        @unique @map("user_id")
  identifier OTP_IDENTIFIER
  activity   OTP_ACTIVITY
  status     OTP_STATUS     @default(PENDING)
  value      String         @unique
  otpCode    String         @unique @map("otp_code")
  createdAt  DateTime       @default(now()) @map("created_at")
  expiresAt  DateTime       @map("expires_at")
  attempts   Int            @default(5)
  User       User?          @relation(fields: [userId], references: [id])
}

enum USER_ACCOUNT_STATUS {
  ACTIVE
  INACTIVE
  SUSPENDED
  DELETED
}

enum OTP_IDENTIFIER {
  EMAIL
  PHONE
}

enum OTP_ACTIVITY {
  ACCOUNT_VERIFICATION
  ACCOUNT_RECOVERY
  TWO_FACTOR_AUTHENTICATION
  PASSWORD_RESET
}

enum OTP_STATUS {
  PENDING
  VERIFIED
  EXPIRED
}
